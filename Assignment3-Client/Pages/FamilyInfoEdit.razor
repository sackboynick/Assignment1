@page "/FamilyInfoEdit/{AdultId:int}"

@using System.Collections
@using Assignment3_Client.Data
@using Assignment3_Client.Models
@inject IData _data;
@inject NavigationManager _navigationManager

<h3>Info of family living at the @_houseNumber in @_streetName</h3>

@if(_familyToEdit==null)
{
    <em>Family not found!</em>
}
else
{
    
    <p>Street name: @_streetName</p>
    <p>House number: @_houseNumber</p>
    <p>Adults:</p>
    <table class="table">
        <thead>
        <tr>
            <th>Person ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Haircolor</th>
            <th>Eyecolor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
            <th>JobTitle</th>
            <th>Salary</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Adult item in _adults)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
                <td>@item.JobTitle.JobTitle</td>
                <td>@item.JobTitle.Salary</td>
            </tr>
        }
        </tbody>
    </table>
    <AuthorizeView Policy="RequireAdmin">
        <button @onclick="@OpenAddAdultPage" hidden="@_addAdult" type="submit">Press to add an adult ( max 2 )</button>
    </AuthorizeView>

    <p><br>Children:</p>
    <table class="table">
        <thead>
        <tr>
            <th>Person ID</th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Haircolor</th>
            <th>Eyecolor</th>
            <th>Age</th>
            <th>Weight</th>
            <th>Height</th>
            <th>Sex</th>
            <th>Interests</th>
            <th>Pets</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Child item in _children)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.FirstName</td>
                <td>@item.LastName</td>
                <td>@item.HairColor</td>
                <td>@item.EyeColor</td>
                <td>@item.Age</td>
                <td>@item.Weight</td>
                <td>@item.Height</td>
                <td>@item.Sex</td>
                <td>@ListToString(@item.Interests.ToList())</td>
                <td>@ListToString(@item.Pets.ToList())</td>
            </tr>
        }
        </tbody>
    </table>
    <AuthorizeView Policy="RequireAdmin">
        <button @onclick="@OpenAddChildPage" hidden="@_addChild" type="submit">Press to add a child ( max 7 )</button>
    </AuthorizeView>
    <br>
    <p><br>Pets:</p>
    <table class="table">
        <thead>
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Specie</th>
            <th>Age</th>
        </tr>
        </thead>
        <tbody>
        @foreach (Pet item in _pets)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Name</td>
                <td>@item.Species</td>
                <td>@item.Age</td>
            </tr>
        }
        </tbody>
    </table>
    <AuthorizeView Policy="RequireAdmin">
        <button @onclick="@OpenAddPetPage" hidden="@_addPet" type="submit">Press to add a pet ( max 3 )</button>
    </AuthorizeView>
    }

@code {
    [Parameter]
    public int AdultId { get; set; }

    private string _streetName;
    private int _houseNumber;

    private bool _addAdult, _addChild, _addPet;

    private Family _familyToEdit;
    private IList<Adult> _adults;
    private IList<Child> _children;
    private IList<Pet> _pets;

    protected override async Task OnInitializedAsync()
    {
        _familyToEdit = _data.GetFamilyFromAdult(AdultId).Result;
        _streetName = _familyToEdit.StreetName;
        _houseNumber = _familyToEdit.HouseNumber;

        _adults = _familyToEdit.Adults;
        _children = _familyToEdit.Children;
        _pets = _familyToEdit.Pets;

        _addAdult = _adults.Count == 2;
        _addChild = _children.Count == 7;
        _addPet = _pets.Count == 3;
    }

    private string ListToString<T>(List<T> list)
    {
        string result = "";
        foreach (T x in list)
        {
            result += x+"\n----------\n\n";
        }
        return result;
    }

    private void OpenAddAdultPage()
    {
        _navigationManager.NavigateTo($"AddAdultToFamily/{AdultId}");
    }
    private void OpenAddChildPage()
    {
        _navigationManager.NavigateTo($"AddChildToFamily/{AdultId}");
    }
    private void OpenAddPetPage()
    {
        _navigationManager.NavigateTo($"AddPetToFamily/{AdultId}");
    }

}