@page "/AddChildToFamily/{AdultId:int}"
@using Data
@using Microsoft.AspNetCore.Components
@using Assignment2_Client.Models
@attribute [Authorize(Policy = "RequireAdmin")]
@inject IData _data;
@inject NavigationManager _navigationManager
<h3>AddChildrenToFamily</h3>

<EditForm Model="@_newChild" OnValidSubmit="@AddNewChild">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    <div class="form-group">First Name: <br/>
        <InputTextArea rows="1" @bind-Value="_newChild.FirstName"></InputTextArea>
    </div>
    <div class="form-group">Last Name: <br/>
        <InputTextArea rows="1" @bind-Value="_newChild.LastName"></InputTextArea>
    </div>
    <div class="form-group">Haircolor: <br/>
        <InputTextArea rows="1" @bind-Value="_newChild.HairColor"></InputTextArea>
    </div>
    <div class="form-group">Eyecolor: <br/>
        <InputTextArea rows="1" @bind-Value="_newChild.EyeColor"></InputTextArea>
    </div>
    <div class="form-group">Age: <br/>
        <InputNumber @bind-Value="_newChild.Age"></InputNumber>
    </div>
    <div class="form-group">Weight: <br/>
        <InputNumber @bind-Value="_newChild.Weight"></InputNumber>
    </div>
    <div class="form-group">Height: <br/>
        <InputNumber @bind-Value="_newChild.Height"></InputNumber>
    </div>
    <div class="form-group">Sex: <br/>
        <InputTextArea rows="1" @bind-Value="_newChild.Sex"></InputTextArea>
    </div>
    <br/>
    
    <p>Add interest</p>
    <div class="form-group">Interest type: <br/>
            <InputTextArea @bind-Value="@_interestType"></InputTextArea>
        </div>
    <div class="form-group">Description: <br/>
        <InputTextArea rows="2" @bind-Value="_interestDescription"></InputTextArea>
    </div>
    <p>
        <button class="btn btn-outline-dark" @onclick="@AddInterest">Add interest</button>
    </p>
    <br/>
    
    <p>Add pet</p>
        <div class="form-group">Name: <br/>
                <InputTextArea @bind-Value="@_petName"></InputTextArea>
            </div>
    <div class="form-group">Age: <br/>
        <InputNumber rows="2" @bind-Value="_petAge"></InputNumber>
    </div>
    <div class="form-group">Specie: <br/>
                    <InputTextArea @bind-Value="@_petSpecie"></InputTextArea>
                </div>
        <p>
            <button class="btn btn-outline-dark" @onclick="@AddPet">Add pet</button>
        </p>
        <br/>
    
    <p class="actions">
        <button class="btn btn-outline-dark" type="submit">Create</button>
    </p>
</EditForm>


@code {
    
    [Parameter]
    public int AdultId { get; set; }

    private string _interestType, _interestDescription;

    private string _petName, _petSpecie;
    private int _petAge;
    
    private Family _familyToEdit;

    private Child _newChild;

    protected override async Task OnInitializedAsync()
    {
        _familyToEdit = _data.GetFamilyFromAdult(AdultId).Result;
        _newChild = new Child();
    }

    private void AddInterest()
    {
        if((_interestType != null || _interestType=="") && (_interestDescription != null || _interestDescription==""))
            _newChild.Interests.Add(new Interest(_interestType,_interestDescription));
        _interestType = "";
        _interestDescription = "";
    }

    private void AddPet()
    {
        if(_petAge!=-1 && (_petName != null || _petName!="") && (_petSpecie != null || _petSpecie!=""))
            _newChild.Pets.Add(new Pet(_newChild.Pets.Count-1,_petName,_petAge,_petSpecie));
        _petAge = -1;
        _petName = "";
        _petSpecie = "";
    }

    private void AddNewChild()
    {
        _newChild.Id = _familyToEdit.Children.Count;
        _familyToEdit.Children.Add(_newChild);
        _navigationManager.NavigateTo($"FamilyInfoEdit/{AdultId}");
        _data.UpdateFamily(_familyToEdit);
    }

}